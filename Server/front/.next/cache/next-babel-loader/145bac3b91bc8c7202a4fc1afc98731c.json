{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport const loginAction = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","loginAction","data","type","rootReducer","state","action"],"sources":["/Users/dong/DockerReact/pepare/front/reducers/index.js"],"sourcesContent":["const initialState={\n    user:{\n        isLoggedIn:false,\n        user:null,\n        signUpData:{},\n        loginData:{}\n    },\n    post:{\n        mainPosts:[],\n    }\n}\n\nexport const loginAction=(data)=>{\n    return{\n        type:'LOG_IN',\n        data\n    }\n}\n\n\nconst rootReducer =(state=initialState,action)=>{\n\n    switch(action.type){\n        case 'LOG_IN':\n            return {\n                ...state,\n               user:{\n                   ...state.user,\n                   isLoggedIn:true,\n                   user:action.data\n\n               }\n            }\n    }\n\n}\n\nexport default rootReducer"],"mappings":";;;AAAA,MAAMA,YAAY,GAAC;EACfC,IAAI,EAAC;IACDC,UAAU,EAAC,KAAK;IAChBD,IAAI,EAAC,IAAI;IACTE,UAAU,EAAC,CAAC,CAAC;IACbC,SAAS,EAAC,CAAC;EACf,CAAC;EACDC,IAAI,EAAC;IACDC,SAAS,EAAC;EACd;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAEC,IAAI,IAAG;EAC7B,OAAM;IACFC,IAAI,EAAC,QAAQ;IACbD;EACJ,CAAC;AACL,CAAC;AAGD,MAAME,WAAW,GAAE,CAACC,KAAK,GAACX,YAAY,EAACY,MAAM,KAAG;EAE5C,QAAOA,MAAM,CAACH,IAAI;IACd,KAAK,QAAQ;MACT,uCACOE,KAAK;QACTV,IAAI,kCACGU,KAAK,CAACV,IAAI;UACbC,UAAU,EAAC,IAAI;UACfD,IAAI,EAACW,MAAM,CAACJ;QAAI;MAEnB;EACH;AAGb,CAAC;AAED,eAAeE,WAAW"},"metadata":{},"sourceType":"module"}