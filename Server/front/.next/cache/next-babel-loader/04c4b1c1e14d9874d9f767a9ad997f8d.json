{"ast":null,"code":"var _jsxFileName = \"/Users/dong/DockerReact/pepare/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport useinput from '../hooks/useinput';\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addcommentDone,\n    addcommentLoading\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setComment] = useinput('');\n  useEffect(() => {\n    if (addcommentDone) {\n      setComment('');\n    }\n  }, [addcommentDone]);\n  const onSubmitComment = useCallback(() => {\n    // console.log(commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    loading: addcommentLoading,\n    style: {\n      marginLeft: 650,\n      marginTop: 10,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["Button","Form","Input","React","useCallback","useEffect","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","useinput","CommentForm","post","dispatch","id","state","user","me","addcommentDone","addcommentLoading","commentText","onChangeCommentText","setComment","onSubmitComment","type","data","content","postId","userId","position","margin","marginLeft","marginTop","zIndex","propTypes","object","isRequired"],"sources":["/Users/dong/DockerReact/pepare/front/components/CommentForm.js"],"sourcesContent":["import { Button, Form, Input } from 'antd';\nimport React, { useCallback ,useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport useinput from '../hooks/useinput';\n\nconst CommentForm = ({ post }) => {\n    const dispatch=useDispatch()\n    const id=useSelector((state)=>state.user.me?.id)\n    const {addcommentDone,addcommentLoading}=useSelector((state)=>state.post)\n  const [commentText, onChangeCommentText,setComment] = useinput('');\n\n\n    useEffect(()=>{\n        if(addcommentDone){\n            setComment('')\n        }\n    },[addcommentDone])\n  const onSubmitComment = useCallback(() => {\n    // console.log(commentText);\n    dispatch({\n        type:ADD_COMMENT_REQUEST,\n        data:{\n            content:commentText,\n            postId:post.id,\n            userId:id\n            \n        }\n    })\n  }, [commentText,id]);\n\n  \n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\n        <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n        <Button loading={addcommentLoading} style={{marginLeft:650,marginTop:10,zIndex:1}} type=\"primary\" htmlType=\"submit\">삐약</Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,OAAOC,KAAK,IAAIC,WAAW,EAAEC,SAAS,QAAO,OAAO;AACpD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC9B,MAAMC,QAAQ,GAACN,WAAW,EAAE;EAC5B,MAAMO,EAAE,GAACN,WAAW,CAAEO,KAAK;IAAA;IAAA,yBAAGA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EAChD,MAAM;IAACI,cAAc;IAACC;EAAiB,CAAC,GAACX,WAAW,CAAEO,KAAK,IAAGA,KAAK,CAACH,IAAI,CAAC;EAC3E,MAAM,CAACQ,WAAW,EAAEC,mBAAmB,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAGhEL,SAAS,CAAC,MAAI;IACV,IAAGa,cAAc,EAAC;MACdI,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC,EAAC,CAACJ,cAAc,CAAC,CAAC;EACrB,MAAMK,eAAe,GAAGnB,WAAW,CAAC,MAAM;IACxC;IACAS,QAAQ,CAAC;MACLW,IAAI,EAACf,mBAAmB;MACxBgB,IAAI,EAAC;QACDC,OAAO,EAACN,WAAW;QACnBO,MAAM,EAACf,IAAI,CAACE,EAAE;QACdc,MAAM,EAACd;MAEX;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACM,WAAW,EAACN,EAAE,CAAC,CAAC;EAGpB,OACE,MAAC,IAAI;IAAC,QAAQ,EAAES,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9B,MAAC,IAAI,CAAC,IAAI;IAAC,KAAK,EAAE;MAAEM,QAAQ,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpD,MAAC,KAAK,CAAC,QAAQ;IAAC,IAAI,EAAE,CAAE;IAAC,KAAK,EAAEV,WAAY;IAAC,QAAQ,EAAEC,mBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC9E,MAAC,MAAM;IAAC,OAAO,EAAEF,iBAAkB;IAAC,KAAK,EAAE;MAACY,UAAU,EAAC,GAAG;MAACC,SAAS,EAAC,EAAE;MAACC,MAAM,EAAC;IAAC,CAAE;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CACrH,CACP;AAEX,CAAC;AAEDtB,WAAW,CAACuB,SAAS,GAAG;EACtBtB,IAAI,EAAEN,SAAS,CAAC6B,MAAM,CAACC;AACzB,CAAC;AAED,eAAezB,WAAW"},"metadata":{},"sourceType":"module"}