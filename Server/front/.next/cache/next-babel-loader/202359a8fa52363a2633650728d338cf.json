{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { HYDRATE } from 'next-redux-wrapper';\nimport shortId from 'shortid';\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '동영'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://helpx.adobe.com/content/dam/help/en/photoshop/using/quick-actions/remove-background-before-qa1.png'\n    }, {\n      src: 'https://byline.network/wp-content/uploads/2018/05/cat.png'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'ji'\n      },\n      content: '사고싶어요'\n    }]\n  }],\n  imagePaths: [],\n  addpostLoading: false,\n  addpostDone: false,\n  addpostError: null,\n  removepostLoading: false,\n  removepostDone: false,\n  removepostError: null,\n  addcommentLoading: false,\n  addcommentDone: false,\n  addcommentError: null\n};\nconst dummyPost = (id, content) => {\n  return {\n    id,\n    content,\n    User: {\n      id: 1,\n      nickname: '제로'\n    },\n    Images: [],\n    Comments: []\n  };\n};\nconst dummyComment = data => {\n  return {\n    id: data.id,\n    User: {\n      nickname: 'ji'\n    },\n    content: data.content\n  };\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const addpostRequestAction = data => {\n  return {\n    type: ADD_POST_REQUEST,\n    data\n  };\n};\nexport const addcommentRequestAction = data => {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data\n  };\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addpostDone: false,\n        addpostLoading: true,\n        addpostError: null\n      });\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data.id, action.data.content), ...state.mainPosts],\n        addpostDone: true,\n        addpostLoading: false\n      });\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addpostDone: false,\n        addpostLoading: false,\n        addpostError: action.err\n      });\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addcommentLoading: true,\n        addcommentDone: false,\n        addcommentError: null\n      });\n    case ADD_COMMENT_SUCCESS:\n      {\n        console.log('성공', action.data);\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = _objectSpread({}, state.mainPosts[postIndex]);\n        post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts,\n          addcommentDone: true,\n          addcommentLoading: false\n        });\n      }\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addcommentDone: false,\n        addcommentLoading: false,\n        addcommentError: action.err\n      });\n    case REMOVE_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        removepostDone: false,\n        removepostLoading: true,\n        removepostError: null\n      });\n    case REMOVE_POST_SUCCESS:\n      {\n        const newmainpost = state.mainPosts.filter(m => m.id !== action.data);\n        console.log('asd');\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: newmainpost,\n          removepostDone: true,\n          removepostLoading: false\n        });\n      }\n    case REMOVE_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        removepostDone: false,\n        removepostLoading: false,\n        removepostError: action.err\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["HYDRATE","shortId","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addpostLoading","addpostDone","addpostError","removepostLoading","removepostDone","removepostError","addcommentLoading","addcommentDone","addcommentError","dummyPost","dummyComment","data","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addpostRequestAction","type","addcommentRequestAction","reducer","state","action","console","log","payload","err","postIndex","findIndex","v","postId","post","newmainpost","filter","m"],"sources":["/Users/dong/DockerReact/pepare/front/reducers/post.js"],"sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\nimport shortId from 'shortid'\n\n\nexport const initialState={\n    mainPosts:[{\n        id:1,\n        User:{\n            id:1,\n            nickname:'동영'\n        },\n        content:'첫 번째 게시글 #해시태그 #익스프레스',\n        Images:[{\n            src:'https://helpx.adobe.com/content/dam/help/en/photoshop/using/quick-actions/remove-background-before-qa1.png'\n        },{\n            src:'https://byline.network/wp-content/uploads/2018/05/cat.png'\n        }\n    \n        ],\n        Comments:[\n            {\n             User:{\n                 nickname:'ji'\n             },\n             content:'사고싶어요'\n            }\n        ]\n    \n    }],\n    imagePaths:[],\n    addpostLoading:false,\n    addpostDone:false,\n    addpostError:null,\n\n    removepostLoading:false,\n    removepostDone:false,\n    removepostError:null,\n\n    addcommentLoading:false,\n    addcommentDone:false,\n    addcommentError:null\n}\n\nconst dummyPost=(id,content)=>{\n    return{\n        id,\n        content,\n        User:{\n            id:1,\n            nickname:'제로'\n        },\n        Images:[],\n        Comments:[]\n    }\n   \n}\n\nconst dummyComment=(data)=>{\n    return{\n            id:data.id,\n            User:{\n                nickname:'ji'\n            },\n            content:data.content\n           }\n    \n}\nexport const ADD_POST_REQUEST='ADD_POST_REQUEST'; \nexport const ADD_POST_SUCCESS='ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE='ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST='ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS='ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE='ADD_COMMENT_FAILURE';\n\nexport const REMOVE_POST_REQUEST='REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS='REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE='REMOVE_POST_FAILURE';\n\n\n\nexport const addpostRequestAction=(data)=>{\n   return{\n    type:ADD_POST_REQUEST,\n    data\n   }\n}\n\nexport const addcommentRequestAction=(data)=>{\n    return{\n        type:ADD_COMMENT_REQUEST,\n        data\n    }\n}\n\nexport const reducer = (state=initialState,action)=>{\n    \n    switch(action.type){\n\n        case HYDRATE:\n            console.log('HYDRATE',action)\n            return{...state,...action.payload}\n\n        case ADD_POST_REQUEST:\n            return{\n                ...state,\n                addpostDone:false,\n                addpostLoading:true,\n                addpostError:null\n            }    \n        case ADD_POST_SUCCESS:\n            return{\n                ...state,\n                mainPosts:[dummyPost(action.data.id,action.data.content),...state.mainPosts],\n                addpostDone:true,\n                addpostLoading:false,\n            }\n        case ADD_POST_FAILURE:\n            return{\n                ...state,\n                addpostDone:false,\n                addpostLoading:false,\n                addpostError:action.err\n            }\n            case ADD_COMMENT_REQUEST:\n                return{\n                    ...state,\n                    addcommentLoading:true,\n                    addcommentDone:false,\n                    addcommentError:null\n                }    \n            case ADD_COMMENT_SUCCESS:{\n                \n                console.log('성공',action.data)\n                const postIndex =state.mainPosts.findIndex((v)=>v.id===action.data.postId);\n                const post ={...state.mainPosts[postIndex]};\n                post.Comments=[dummyComment(action.data.content),...post.Comments];\n                const mainPosts=[...state.mainPosts];\n                mainPosts[postIndex]=post\n                return{\n                    ...state,\n                    mainPosts,\n                    addcommentDone:true,\n                    addcommentLoading:false,\n                }\n            }\n            case ADD_COMMENT_FAILURE:\n                return{\n                    ...state,\n                    addcommentDone:false,\n                    addcommentLoading:false,\n                    addcommentError:action.err\n                }\n            case REMOVE_POST_REQUEST:\n                    return{\n                        ...state,\n                        removepostDone:false,\n                        removepostLoading:true,\n                        removepostError:null\n                    }    \n            case REMOVE_POST_SUCCESS:{\n\n                const newmainpost=state.mainPosts.filter((m)=>m.id!==action.data)\n                console.log('asd')\n                    return{\n                        ...state,\n\n                        mainPosts:newmainpost,\n\n\n\n                        removepostDone:true,\n                        removepostLoading:false,\n                    }\n                }\n            case REMOVE_POST_FAILURE:\n                    return{\n                        ...state,\n                        removepostDone:false,\n                        removepostLoading:false,\n                        removepostError:action.err\n                    }\n        default:\n            return state;\n    }\n\n}\n\nexport default reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}