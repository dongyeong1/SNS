{"ast":null,"code":"var _jsxFileName = \"/Users/dong/DockerReact/pepare/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addpostRequestAction } from '../reducers/post';\nimport useinput from '../hooks/useinput';\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addpostDone\n  } = useSelector(state => state.post);\n  const [text, onChangeText, setText] = useinput('');\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  useEffect(() => {\n    if (addpostDone) {\n      setText('');\n    }\n  }, [addpostDone]);\n  const onSubmit = useCallback(() => {\n    dispatch(addpostRequestAction(text));\n  }, [text]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      marginTop: 10\n    },\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right',\n      marginTop: 10\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, imagePaths.map(v => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3065/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\nexport default PostForm;","map":{"version":3,"names":["React","useRef","useCallback","useState","useEffect","Form","Input","Button","useDispatch","useSelector","addpostRequestAction","useinput","PostForm","imagePaths","addpostDone","state","post","text","onChangeText","setText","dispatch","imageInput","onClickImageUpload","current","click","onSubmit","margin","marginTop","float","map","v","display","width"],"sources":["/Users/dong/DockerReact/pepare/front/components/PostForm.js"],"sourcesContent":["import React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addpostRequestAction } from '../reducers/post';\nimport useinput from '../hooks/useinput';\n\nconst PostForm = () => {\n  const { imagePaths, addpostDone} = useSelector(state => state.post);\n  const [text, onChangeText,setText] = useinput('');\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  useEffect(() => {\n    if (addpostDone) {\n      setText('');\n    }\n  }, [addpostDone]);\n  \n  const onSubmit = useCallback(() => {\n    dispatch(addpostRequestAction(text));\n  }, [text]);\n\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" />\n      <div>\n        <input type=\"file\" multiple hidden ref={imageInput} />\n        <Button style={{marginTop:10 }} onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right',marginTop:10 }} htmlType=\"submit\">짹짹</Button>\n      </div>\n      <div>\n        {imagePaths.map((v) => {\n          return (\n            <div key={v} style={{ display: 'inline-block' }}>\n              <img src={'http://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\n              <div>\n                <Button>제거</Button>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvE,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,oBAAoB,QAAQ,kBAAkB;AACvD,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,MAAMC,QAAQ,GAAG,MAAM;EACrB,MAAM;IAAEC,UAAU;IAAEC;EAAW,CAAC,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EACnE,MAAM,CAACC,IAAI,EAAEC,YAAY,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAMS,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,UAAU,GAAGpB,MAAM,EAAE;EAE3B,MAAMqB,kBAAkB,GAAGpB,WAAW,CAAC,MAAM;IAC3CmB,UAAU,CAACE,OAAO,CAACC,KAAK,EAAE;EAC5B,CAAC,EAAE,CAACH,UAAU,CAACE,OAAO,CAAC,CAAC;EAExBnB,SAAS,CAAC,MAAM;IACd,IAAIU,WAAW,EAAE;MACfK,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,MAAMW,QAAQ,GAAGvB,WAAW,CAAC,MAAM;IACjCkB,QAAQ,CAACV,oBAAoB,CAACO,IAAI,CAAC,CAAC;EACtC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,OACE,MAAC,IAAI;IAAC,KAAK,EAAE;MAAES,MAAM,EAAE;IAAc,CAAE;IAAC,OAAO,EAAC,qBAAqB;IAAC,QAAQ,EAAED,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACvF,MAAC,KAAK,CAAC,QAAQ;IAAC,KAAK,EAAER,IAAK;IAAC,QAAQ,EAAEC,YAAa;IAAC,SAAS,EAAE,GAAI;IAAC,WAAW,EAAC,wEAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACrG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAO,IAAI,EAAC,MAAM;IAAC,QAAQ;IAAC,MAAM;IAAC,GAAG,EAAEG,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACtD,MAAC,MAAM;IAAC,KAAK,EAAE;MAACM,SAAS,EAAC;IAAG,CAAE;IAAC,OAAO,EAAEL,kBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2CAAiB,EAC7E,MAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,KAAK,EAAE;MAAEM,KAAK,EAAE,OAAO;MAACD,SAAS,EAAC;IAAG,CAAE;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CACxF,EACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGd,UAAU,CAACgB,GAAG,CAAEC,CAAC,IAAK;IACrB,OACE;MAAK,GAAG,EAAEA,CAAE;MAAC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAe,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC9C;MAAK,GAAG,EAAE,wBAAwB,GAAGD,CAAE;MAAC,KAAK,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE;MAAC,GAAG,EAAEF,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EAC7E;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,kBAAY,CACf,CACF;EAEV,CAAC,CAAC,CACE,CACD;AAEX,CAAC;AAED,eAAelB,QAAQ"},"metadata":{},"sourceType":"module"}