{"ast":null,"code":"var _jsxFileName = \"/Users/dong/DockerReact/pepare/front/components/PostCardContent.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nfunction PostCardContent({\n  PostData\n}) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, PostData.split(/(#[^\\s#]+)/g).map(v => {\n    if (v.match(/(#[^\\s#]+)/)) {\n      return __jsx(Link, {\n        href: {\n          pathname: '/hashtag',\n          query: {\n            tag: v.slice(1)\n          }\n        },\n        as: `/hashtag/${v.slice(1)}`,\n        key: v,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 25\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, v));\n    }\n    return v;\n  }))\n\n  // <div>\n  // {postData.split(/(#[^\\s#]+)/g).map((v) => {\n  //   if (v.match(/(#[^\\s]+)/)) {\n  //     return (\n  //       <Link\n  //         href={{ pathname: '/hashtag', query: { tag: v.slice(1) } }}\n  //         as={`/hashtag/${v.slice(1)}`}\n  //         key={v}\n  //       >\n  //         <a>{v}</a>\n  //       </Link>\n  //     );\n  //   }\n  //   return v;\n  // })}\n  // </div>\n  ;\n}\n\nexport default PostCardContent;","map":{"version":3,"names":["React","Link","PostCardContent","PostData","split","map","v","match","pathname","query","tag","slice"],"sources":["/Users/dong/DockerReact/pepare/front/components/PostCardContent.js"],"sourcesContent":["import React from 'react'\nimport Link from 'next/link'\n\nfunction PostCardContent({PostData}) {\n  return (\n    <div>\n        {PostData.split(/(#[^\\s#]+)/g).map((v)=>{\n            if(v.match(/(#[^\\s#]+)/)){\n                return  <Link\n                href={{ pathname: '/hashtag', query: { tag: v.slice(1) } }}\n                as={`/hashtag/${v.slice(1)}`}\n                key={v}\n              >\n                <a>{v}</a>\n              </Link>\n            }\n            return v\n        })}\n    </div>\n\n// <div>\n// {postData.split(/(#[^\\s#]+)/g).map((v) => {\n//   if (v.match(/(#[^\\s]+)/)) {\n//     return (\n//       <Link\n//         href={{ pathname: '/hashtag', query: { tag: v.slice(1) } }}\n//         as={`/hashtag/${v.slice(1)}`}\n//         key={v}\n//       >\n//         <a>{v}</a>\n//       </Link>\n//     );\n//   }\n//   return v;\n// })}\n// </div>\n  )\n}\n\nexport default PostCardContent"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAE5B,SAASC,eAAe,CAAC;EAACC;AAAQ,CAAC,EAAE;EACnC,OACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKA,QAAQ,CAACC,KAAK,CAAC,aAAa,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAG;IACpC,IAAGA,CAAC,CAACC,KAAK,CAAC,YAAY,CAAC,EAAC;MACrB,OAAQ,MAAC,IAAI;QACb,IAAI,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAAEC,KAAK,EAAE;YAAEC,GAAG,EAAEJ,CAAC,CAACK,KAAK,CAAC,CAAC;UAAE;QAAE,CAAE;QAC3D,EAAE,EAAG,YAAWL,CAAC,CAACK,KAAK,CAAC,CAAC,CAAE,EAAE;QAC7B,GAAG,EAAEL,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAEP;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAIA,CAAC,CAAK,CACL;IACT;IACA,OAAOA,CAAC;EACZ,CAAC,CAAC;;EAGV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEA;;AAEA,eAAeJ,eAAe"},"metadata":{},"sourceType":"module"}