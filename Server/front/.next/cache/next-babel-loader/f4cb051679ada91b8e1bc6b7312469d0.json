{"ast":null,"code":"import axios from \"axios\";\nimport { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_TO_ME } from \"../reducers/user\";\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n\n    // yield delay(1000)\n    // const id=shortId.generate()\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.log('errrrorrrrr', err.response.data);\n    yield put({\n      type: ADD_POST_FAILURE,\n      erorr: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, {\n    content: data.content\n  });\n}\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    // console.log('123455',action.data)\n    // yield delay(1000)\n    yield console.log('resulttttttt', result.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction removePostAPI(data) {\n  return axios.delete('/api/post', data);\n}\nfunction* removePost(action) {\n  try {\n    // console.log('POSTIDDIDIDIDIDID',action.data)\n    const result = yield call(removePostAPI, action.data);\n    // console.log('123455',action.data)\n    // yield delay(1000)\n\n    // yield console.log('qweqwrqwerwetrwertwe',result.data.removedPost)\n    // yield console.log('IDIDIDIDIDIDIDID',result.data.id)\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data.removedPost\n    });\n    yield put({\n      type: REMOVE_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction loadPostAPI() {\n  return axios.post('/post/loadPost');\n}\nfunction* loadPost() {\n  try {\n    const result = yield call(loadPostAPI);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\nfunction likeAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\nfunction* like(action) {\n  try {\n    const result = yield call(likeAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\nfunction unlikeAPI(data) {\n  return axios.delete(`post/${data}/like`);\n}\nfunction* unlike(action) {\n  try {\n    const result = yield call(unlikeAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nfunction* watchremovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, like);\n}\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlike);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchremovePost), fork(watchLoadPost), fork(watchLikePost), fork(watchUnLikePost)]);\n}","map":{"version":3,"names":["axios","all","call","fork","put","takeLatest","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_FAILURE","LIKE_POST_SUCCESS","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_TO_ME","addPostAPI","data","post","content","addPost","action","result","type","id","err","console","log","response","erorr","addCommentAPI","postId","addComment","removePostAPI","delete","removePost","removedPost","error","loadPostAPI","loadPost","likeAPI","patch","like","unlikeAPI","unlike","watchAddPost","watchAddComment","watchremovePost","watchLoadPost","watchLikePost","watchUnLikePost","postSaga"],"sources":["/Users/dong/DockerReact/Server/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\nimport { all ,call,fork, put, takeLatest} from \"redux-saga/effects\";\nimport {\n    ADD_POST_FAILURE,\n    ADD_POST_REQUEST,\n    ADD_POST_SUCCESS,\n    ADD_COMMENT_FAILURE,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_SUCCESS,\n    REMOVE_POST_SUCCESS,\n    REMOVE_POST_FAILURE,\n    REMOVE_POST_REQUEST,\n    LOAD_POST_REQUEST,\n    LOAD_POST_SUCCESS,\n    LOAD_POST_FAILURE,\n    LIKE_POST_REQUEST,\n    UNLIKE_POST_REQUEST,\n    LIKE_POST_FAILURE,\n    LIKE_POST_SUCCESS,\n    UNLIKE_POST_SUCCESS,\n    UNLIKE_POST_FAILURE,\n\n} from '../reducers/post'\nimport { ADD_POST_TO_ME, REMOVE_POST_TO_ME } from \"../reducers/user\";\n\nfunction addPostAPI(data){\n    return axios.post('/post',{content:data})\n}\n\nfunction* addPost(action)\n{\n    try{\n        const result = yield call(addPostAPI,action.data)\n        \n        // yield delay(1000)\n        // const id=shortId.generate()\n        yield put({\n            type:ADD_POST_SUCCESS,\n            data:result.data\n        })\n        yield put({\n            type:ADD_POST_TO_ME,\n            data:result.data.id\n        })\n    }catch(err){\n        console.log('errrrorrrrr',err.response.data)\n        yield put({\n            type:ADD_POST_FAILURE,\n            erorr:err.response.data\n        })\n\n    }\n}\n\nfunction addCommentAPI(data){\n    return axios.post(`/post/${data.postId}/comment`,{content:data.content})\n}\n\nfunction* addComment(action)\n{\n    try{\n        const result = yield call(addCommentAPI,action.data)\n        // console.log('123455',action.data)\n        // yield delay(1000)\n        yield console.log('resulttttttt',result.data)\n        yield put({\n            type:ADD_COMMENT_SUCCESS,\n            data:result.data\n        })\n    }catch(err){\n        yield put({\n            type:ADD_COMMENT_FAILURE,\n            data:err.response.data\n        })\n\n    }\n}\n\nfunction removePostAPI(data){\n    return axios.delete('/api/post',data)\n}\n\nfunction* removePost(action)\n{\n    try{\n        // console.log('POSTIDDIDIDIDIDID',action.data)\n        const result = yield call(removePostAPI,action.data)\n        // console.log('123455',action.data)\n        // yield delay(1000)\n\n        // yield console.log('qweqwrqwerwetrwertwe',result.data.removedPost)\n        // yield console.log('IDIDIDIDIDIDIDID',result.data.id)\n        yield put({\n            type:REMOVE_POST_SUCCESS,\n            data:result.data.removedPost\n        })\n        yield put({\n            type:REMOVE_POST_TO_ME,\n            data:result.data.id\n        })\n    }catch(err){\n        yield put({\n            type:REMOVE_POST_FAILURE,\n            error:err.response.data\n        })\n\n    }\n}\n\nfunction loadPostAPI(){\n    return axios.post('/post/loadPost')\n}\n\nfunction* loadPost(){\n\n    try{\n        const result=yield call(loadPostAPI)\n\n    yield put({\n        type:LOAD_POST_SUCCESS,\n        data:result.data\n    })\n\n\n    }catch(error){\n        console.error(error)\n        yield put({\n            type:LOAD_POST_FAILURE,\n            error:error.response.data\n        })\n    }\n\n\n    \n}\n\n\n\nfunction likeAPI(data){\n    return axios.patch(`/post/${data}/like`)\n}\n\nfunction* like(action){\n\n    try{\n        const result=yield call(likeAPI,action.data)\n\n    yield put({\n        type:LIKE_POST_SUCCESS,\n        data:result.data\n    })\n\n\n    }catch(error){\n        console.error(error)\n        yield put({\n            type:LIKE_POST_FAILURE,\n            error:error.response.data\n        })\n    }\n\n\n    \n}\n\n\nfunction unlikeAPI(data){\n    return axios.delete(`post/${data}/like`)\n}\n\nfunction* unlike(action){\n\n    try{\n        const result=yield call(unlikeAPI,action.data)\n\n    yield put({\n        type:UNLIKE_POST_SUCCESS,\n        data:result.data\n    })\n\n\n    }catch(error){\n        console.error(error)\n        yield put({\n            type:UNLIKE_POST_FAILURE,\n            error:error.response.data\n        })\n    }\n\n\n    \n}\n\n\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST,addPost)\n}\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment)\n}\nfunction* watchremovePost(){\n    yield takeLatest(REMOVE_POST_REQUEST,removePost)\n}\nfunction* watchLoadPost(){\n    yield takeLatest(LOAD_POST_REQUEST,loadPost)\n}\nfunction* watchLikePost(){\n    yield takeLatest(LIKE_POST_REQUEST,like)\n}\nfunction* watchUnLikePost(){\n    yield takeLatest(UNLIKE_POST_REQUEST,unlike)\n}\n\n\n\n\n\nexport default function* postSaga(){\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n        fork(watchremovePost),\n        fork(watchLoadPost),\n        fork(watchLikePost),\n        fork(watchUnLikePost)\n    ])\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}