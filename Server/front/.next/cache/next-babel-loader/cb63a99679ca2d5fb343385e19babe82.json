{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { HYDRATE } from 'next-redux-wrapper';\nexport const initialState = {\n  loginLoading: false,\n  loginDone: false,\n  loginError: null,\n  logoutLoading: false,\n  logoutDone: false,\n  logoutError: null,\n  signupLoading: false,\n  signupDone: false,\n  signupError: null,\n  nicknameLoading: false,\n  nicknameDone: false,\n  nicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nconst dummyUser = data => {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: 'zerodong',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [],\n    Followers: []\n  });\n};\nexport const NICKNAME_REQUEST = 'NICKNAME_REQUEST';\nexport const NICKNAME_SUCCESS = 'NICKNAME_SUCCESS';\nexport const NICKNAME_FAILURE = 'NICKNAME_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_TO_ME = 'REMOVE_POST_TO_ME';\nexport const nicknameRequestAction = data => {\n  return {\n    type: NICKNAME_REQUEST,\n    data\n  };\n};\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nexport const signupRequestAction = data => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data\n  };\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: true,\n        loginError: null\n      });\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: false,\n        loginDone: true,\n        me: dummyUser(action.data)\n        //    {...action.data,nickname:'dongzero'}\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: false,\n        loginDone: false,\n        loginError: action.err\n      });\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoutLoading: true\n      });\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoutLoading: false,\n        logoutDone: true,\n        me: null\n      });\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoutDone: false,\n        logoutLoading: false,\n        logoutError: action.err\n      });\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signupLoading: true,\n        signupDone: false,\n        signupError: null\n      });\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signupLoading: false,\n        signupDone: true\n      });\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signupError: action.err,\n        signupLoading: false,\n        signupDone: false\n      });\n    case NICKNAME_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        nicknameLoading: true,\n        nicknameDone: false,\n        nicknameError: null\n      });\n    case NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        nicknameLoading: false,\n        nicknameDone: true\n      });\n    case NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        nicknameError: action.err,\n        nicknameLoading: false,\n        nicknameDone: false\n      });\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: [{\n            id: action.data\n          }, ...state.me.Posts]\n        })\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["HYDRATE","initialState","loginLoading","loginDone","loginError","logoutLoading","logoutDone","logoutError","signupLoading","signupDone","signupError","nicknameLoading","nicknameDone","nicknameError","me","signUpData","loginData","dummyUser","data","nickname","id","Posts","Followings","Followers","NICKNAME_REQUEST","NICKNAME_SUCCESS","NICKNAME_FAILURE","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_TO_ME","nicknameRequestAction","type","loginRequestAction","logoutRequestAction","signupRequestAction","reducer","state","action","console","log","payload","err"],"sources":["/Users/dong/DockerReact/pepare/front/reducers/user.js"],"sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\n\n\n\n\n\nexport const initialState={\n    loginLoading:false,\n    loginDone:false,\n    loginError:null,\n\n    logoutLoading:false,\n    logoutDone:false,\n    logoutError:null,\n\n    signupLoading:false,\n    signupDone:false,\n    signupError:null,\n\n    nicknameLoading:false,\n    nicknameDone:false,\n    nicknameError:null,\n\n    me:null,\n    signUpData:{},\n    loginData:{}\n}\n\n\nconst dummyUser=(data)=>{\nreturn{\n    ...data,\n    nickname:'zerodong',\n    id:1,\n    Posts:[{id:1}],\n    Followings:[],\n    Followers:[]\n\n}\n}\n\nexport const NICKNAME_REQUEST = 'NICKNAME_REQUEST';\nexport const NICKNAME_SUCCESS='NICKNAME_SUCCESS'\nexport const NICKNAME_FAILURE = 'NICKNAME_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_FAILURE='SIGN_UP_FAILURE'\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_FAILURE='LOG_OUT_FAILURE'\nexport const LOG_OUT_SUCCESS='LOG_OUT_SUCCESS'\n\nexport const ADD_POST_TO_ME='ADD_POST_TO_ME'\nexport const REMOVE_POST_TO_ME='REMOVE_POST_TO_ME'\n\n\nexport const nicknameRequestAction=(data)=>{\n    return{\n        type:NICKNAME_REQUEST,\n        data\n    }\n}\n\nexport const loginRequestAction = (data) => {\n    return {\n      type: LOG_IN_REQUEST,\n      data,\n    }\n  };\n  export const logoutRequestAction =()=> {\n      return{\n        type: LOG_OUT_REQUEST,\n\n      }\n  };\n  export const signupRequestAction=(data)=>{\n      return{\n          type:SIGN_UP_REQUEST,\n          data\n      }\n  }\n\nexport const reducer = (state=initialState,action)=>{\n    \n    switch(action.type){\n        case HYDRATE:\n            console.log('HYDRATE',action)\n            return{...state,...action.payload}\n            case LOG_IN_REQUEST:\n                return {\n                       ...state,\n                       loginLoading:true,\n                       loginError:null\n                       \n                };\n            case LOG_IN_SUCCESS:\n                return {\n                       ...state,\n                       loginLoading:false,\n                       loginDone:true,\n                       me:dummyUser(action.data)\n                    //    {...action.data,nickname:'dongzero'}\n                };\n            case LOG_IN_FAILURE:\n                    return {\n                        \n                           ...state,\n                           loginLoading:false,\n                           loginDone:false,\n                           loginError:action.err\n                    };\n            \n            \n            case LOG_OUT_REQUEST:\n                return {\n                        ...state,\n                        logoutLoading:true,\n                        \n                }  \n                case LOG_OUT_SUCCESS:\n                    return {\n                            ...state,\n                            logoutLoading:false,\n                            logoutDone:true,\n                            me:null\n                    }  \n                    case LOG_OUT_FAILURE:\n                        return {\n                                ...state,\n                                logoutDone:false,\n                                logoutLoading:false,\n                                logoutError:action.err,\n                        }  \n            case SIGN_UP_REQUEST:\n                return{\n                    ...state,\n                    signupLoading:true,\n                    signupDone:false,\n                    signupError:null\n\n                }\n            case SIGN_UP_SUCCESS:\n                return{\n                    ...state,\n\n                    signupLoading:false,\n                    signupDone:true,\n                    \n                }\n            case SIGN_UP_FAILURE:\n                return{\n                    ...state,\n                    signupError:action.err,\n                    signupLoading:false,\n                    signupDone:false,\n                }\n            \n\n                case NICKNAME_REQUEST:\n                    return{\n                        ...state,\n                        nicknameLoading:true,\n                        nicknameDone:false,\n                        nicknameError:null\n    \n                    }\n                case NICKNAME_SUCCESS:\n                    return{\n                        ...state,\n    \n                        nicknameLoading:false,\n                        nicknameDone:true,\n                        \n                    }\n                case NICKNAME_FAILURE:\n                    return{\n                        ...state,\n                        nicknameError:action.err,\n                        nicknameLoading:false,\n                        nicknameDone:false,\n                    }\n                case ADD_POST_TO_ME:\n                    return{\n                        ...state,\n                        me:{\n                            ...state.me,\n                            Posts:[{id:action.data},...state.me.Posts],\n                            \n                        }\n                    }\n\n                    \n        default:\n            return state;\n    }\n\n}\n\nexport default reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}