{"ast":null,"code":"import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\n\n//action\n//state를 바꾸고싶을때 항상 action을 만들어서 store에서 action을이용해 dispatch를 한다 그러면 그바꾼 데이터가 reducer로 전달된다  \n//그러면 기존state 말고 다음state가 만들어진다\n// const changeNickname={\n//     type:'CHANGE_NICKNAME',\n//     data:'dong'\n// }\n// //action creator 동적으로 데이터받는다 \n// const changeNicknames=(data)=>{\n//     return{\n//         type:'CHANGE_NICKNAME',\n//     }\n// }\n\n//reducer는 이전상태와 액션을 이용해서 다음상태를 만든다 reload할때 reducer가 실행된다\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return action.payload;\n    default:\n      {\n        const combinedReducer = combineReducers({\n          user,\n          post\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","combineReducers","user","post","rootReducer","state","action","type","console","log","payload","combinedReducer"],"sources":["/Users/dong/DockerReact/pepare/front/reducers/index.js"],"sourcesContent":["import {HYDRATE} from 'next-redux-wrapper'\nimport { combineReducers } from 'redux'\n\nimport user from './user'\nimport post from './post'\n\n\n\n//action\n//state를 바꾸고싶을때 항상 action을 만들어서 store에서 action을이용해 dispatch를 한다 그러면 그바꾼 데이터가 reducer로 전달된다  \n//그러면 기존state 말고 다음state가 만들어진다\n// const changeNickname={\n//     type:'CHANGE_NICKNAME',\n//     data:'dong'\n// }\n// //action creator 동적으로 데이터받는다 \n// const changeNicknames=(data)=>{\n//     return{\n//         type:'CHANGE_NICKNAME',\n//     }\n// }\n\n\n//reducer는 이전상태와 액션을 이용해서 다음상태를 만든다 reload할때 reducer가 실행된다\nconst rootReducer = (state, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return action.payload;\n      default: {\n        const combinedReducer = combineReducers({\n          user,\n          post,\n        });\n        return combinedReducer(state, action);\n      }\n    }\n  };\nexport default rootReducer"],"mappings":"AAAA,SAAQA,OAAO,QAAO,oBAAoB;AAC1C,SAASC,eAAe,QAAQ,OAAO;AAEvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;;AAIzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,OAAO;MACVQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;MAC9B,OAAOA,MAAM,CAACI,OAAO;IACvB;MAAS;QACP,MAAMC,eAAe,GAAGV,eAAe,CAAC;UACtCC,IAAI;UACJC;QACF,CAAC,CAAC;QACF,OAAOQ,eAAe,CAACN,KAAK,EAAEC,MAAM,CAAC;MACvC;EAAC;AAEL,CAAC;AACH,eAAeF,WAAW"},"metadata":{},"sourceType":"module"}