{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(addPost),\n  _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(addComment),\n  _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(removePost),\n  _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(loadPost),\n  _marked5 = /*#__PURE__*/_regeneratorRuntime().mark(like),\n  _marked6 = /*#__PURE__*/_regeneratorRuntime().mark(unlike),\n  _marked7 = /*#__PURE__*/_regeneratorRuntime().mark(watchAddPost),\n  _marked8 = /*#__PURE__*/_regeneratorRuntime().mark(watchAddComment),\n  _marked9 = /*#__PURE__*/_regeneratorRuntime().mark(watchremovePost),\n  _marked10 = /*#__PURE__*/_regeneratorRuntime().mark(watchLoadPost),\n  _marked11 = /*#__PURE__*/_regeneratorRuntime().mark(watchLikePost),\n  _marked12 = /*#__PURE__*/_regeneratorRuntime().mark(watchUnLikePost),\n  _marked13 = /*#__PURE__*/_regeneratorRuntime().mark(postSaga);\nimport axios from \"axios\";\nimport { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_TO_ME } from \"../reducers/user\";\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n        case 6:\n          _context.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n        case 8:\n          _context.next = 15;\n          break;\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('errrrorrrrr', _context.t0.response.data);\n          _context.next = 15;\n          return put({\n            type: ADD_POST_FAILURE,\n            erorr: _context.t0.response.data\n          });\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\nfunction addCommentAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), {\n    content: data.content\n  });\n}\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function addComment$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addCommentAPI, action.data);\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return console.log('resulttttttt', result.data);\n        case 6:\n          _context2.next = 8;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n        case 8:\n          _context2.next = 14;\n          break;\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            data: _context2.t0.response.data\n          });\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\nfunction removePostAPI(data) {\n  return axios.post('/post/removePost', {\n    postId: data\n  });\n}\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function removePost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log('POSTIDDIDIDIDIDID', action.data);\n          _context3.next = 4;\n          return call(removePostAPI, action.data);\n        case 4:\n          result = _context3.sent;\n          _context3.next = 7;\n          return console.log('qweqwrqwerwetrwertwe', result.data.removedPost);\n        case 7:\n          _context3.next = 9;\n          return console.log('IDIDIDIDIDIDIDID', result.data.id);\n        case 9:\n          _context3.next = 11;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data.removedPost\n          });\n        case 11:\n          _context3.next = 13;\n          return put({\n            type: REMOVE_POST_TO_ME,\n            data: result.data.id\n          });\n        case 13:\n          _context3.next = 19;\n          break;\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 19;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            error: _context3.t0.response.data\n          });\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 15]]);\n}\nfunction loadPostAPI() {\n  return axios.post('/post/loadPost');\n}\nfunction loadPost() {\n  var result;\n  return _regeneratorRuntime().wrap(function loadPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadPostAPI);\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n        case 6:\n          _context4.next = 13;\n          break;\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 13;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context4.t0.response.data\n          });\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\nfunction likeAPI() {\n  return axios.patch(\"/post/\".concat(data, \"/like\"), data);\n}\nfunction like() {\n  var result;\n  return _regeneratorRuntime().wrap(function like$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(likeAPI, data);\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data\n          });\n        case 6:\n          _context5.next = 13;\n          break;\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: LIKE_POST_FAILURE,\n            error: _context5.t0.response.data\n          });\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\nfunction unlikeAPI() {\n  return axios.patch('/post/loadPost');\n}\nfunction unlike() {\n  var result;\n  return _regeneratorRuntime().wrap(function unlike$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(unlikeAPI);\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data\n          });\n        case 6:\n          _context6.next = 13;\n          break;\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n          _context6.next = 13;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            error: _context6.t0.response.data\n          });\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\nfunction watchAddPost() {\n  return _regeneratorRuntime().wrap(function watchAddPost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\nfunction watchAddComment() {\n  return _regeneratorRuntime().wrap(function watchAddComment$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nfunction watchremovePost() {\n  return _regeneratorRuntime().wrap(function watchremovePost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\nfunction watchLoadPost() {\n  return _regeneratorRuntime().wrap(function watchLoadPost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(LOAD_POST_REQUEST, loadPost);\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\nfunction watchLikePost() {\n  return _regeneratorRuntime().wrap(function watchLikePost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(LIKE_POST_REQUEST, like);\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\nfunction watchUnLikePost() {\n  return _regeneratorRuntime().wrap(function watchUnLikePost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(UNLIKE_POST_REQUEST, unlike);\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\nexport default function postSaga() {\n  return _regeneratorRuntime().wrap(function postSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return all([fork(watchAddPost), fork(watchAddComment), fork(watchremovePost), fork(watchLoadPost), fork(watchLikePost), fork(watchUnLikePost)]);\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}","map":{"version":3,"names":["addPost","addComment","removePost","loadPost","like","unlike","watchAddPost","watchAddComment","watchremovePost","watchLoadPost","watchLikePost","watchUnLikePost","postSaga","axios","all","call","fork","put","takeLatest","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_FAILURE","LIKE_POST_SUCCESS","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_TO_ME","addPostAPI","data","post","content","action","result","type","id","console","log","response","erorr","addCommentAPI","postId","removePostAPI","removedPost","error","loadPostAPI","likeAPI","patch","unlikeAPI"],"sources":["/Users/dong/DockerReact/Server/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\nimport { all ,call,fork, put, takeLatest} from \"redux-saga/effects\";\nimport {\n    ADD_POST_FAILURE,\n    ADD_POST_REQUEST,\n    ADD_POST_SUCCESS,\n    ADD_COMMENT_FAILURE,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_SUCCESS,\n    REMOVE_POST_SUCCESS,\n    REMOVE_POST_FAILURE,\n    REMOVE_POST_REQUEST,\n    LOAD_POST_REQUEST,\n    LOAD_POST_SUCCESS,\n    LOAD_POST_FAILURE,\n    LIKE_POST_REQUEST,\n    UNLIKE_POST_REQUEST,\n    LIKE_POST_FAILURE,\n    LIKE_POST_SUCCESS,\n    UNLIKE_POST_SUCCESS,\n    UNLIKE_POST_FAILURE,\n\n} from '../reducers/post'\nimport { ADD_POST_TO_ME, REMOVE_POST_TO_ME } from \"../reducers/user\";\n\nfunction addPostAPI(data){\n    return axios.post('/post',{content:data})\n}\n\nfunction* addPost(action)\n{\n    try{\n        const result = yield call(addPostAPI,action.data)\n        \n        // yield delay(1000)\n        // const id=shortId.generate()\n        yield put({\n            type:ADD_POST_SUCCESS,\n            data:result.data\n        })\n        yield put({\n            type:ADD_POST_TO_ME,\n            data:result.data.id\n        })\n    }catch(err){\n        console.log('errrrorrrrr',err.response.data)\n        yield put({\n            type:ADD_POST_FAILURE,\n            erorr:err.response.data\n        })\n\n    }\n}\n\nfunction addCommentAPI(data){\n    return axios.post(`/post/${data.postId}/comment`,{content:data.content})\n}\n\nfunction* addComment(action)\n{\n    try{\n        const result = yield call(addCommentAPI,action.data)\n        // console.log('123455',action.data)\n        // yield delay(1000)\n        yield console.log('resulttttttt',result.data)\n        yield put({\n            type:ADD_COMMENT_SUCCESS,\n            data:result.data\n        })\n    }catch(err){\n        yield put({\n            type:ADD_COMMENT_FAILURE,\n            data:err.response.data\n        })\n\n    }\n}\n\nfunction removePostAPI(data){\n    return axios.post('/post/removePost',{postId:data})\n}\n\nfunction* removePost(action)\n{\n    try{\n        console.log('POSTIDDIDIDIDIDID',action.data)\n        const result = yield call(removePostAPI,action.data)\n        // console.log('123455',action.data)\n        // yield delay(1000)\n\n        yield console.log('qweqwrqwerwetrwertwe',result.data.removedPost)\n        yield console.log('IDIDIDIDIDIDIDID',result.data.id)\n        yield put({\n            type:REMOVE_POST_SUCCESS,\n            data:result.data.removedPost\n        })\n        yield put({\n            type:REMOVE_POST_TO_ME,\n            data:result.data.id\n        })\n    }catch(err){\n        yield put({\n            type:REMOVE_POST_FAILURE,\n            error:err.response.data\n        })\n\n    }\n}\n\nfunction loadPostAPI(){\n    return axios.post('/post/loadPost')\n}\n\nfunction* loadPost(){\n\n    try{\n        const result=yield call(loadPostAPI)\n\n    yield put({\n        type:LOAD_POST_SUCCESS,\n        data:result.data\n    })\n\n\n    }catch(error){\n        console.error(error)\n        yield put({\n            type:LOAD_POST_FAILURE,\n            error:error.response.data\n        })\n    }\n\n\n    \n}\n\n\n\nfunction likeAPI(){\n    return axios.patch(`/post/${data}/like`,data)\n}\n\nfunction* like(){\n\n    try{\n        const result=yield call(likeAPI,data)\n\n    yield put({\n        type:LIKE_POST_SUCCESS,\n        data:result.data\n    })\n\n\n    }catch(error){\n        console.error(error)\n        yield put({\n            type:LIKE_POST_FAILURE,\n            error:error.response.data\n        })\n    }\n\n\n    \n}\n\n\nfunction unlikeAPI(){\n    return axios.patch('/post/loadPost')\n}\n\nfunction* unlike(){\n\n    try{\n        const result=yield call(unlikeAPI)\n\n    yield put({\n        type:UNLIKE_POST_SUCCESS,\n        data:result.data\n    })\n\n\n    }catch(error){\n        console.error(error)\n        yield put({\n            type:UNLIKE_POST_FAILURE,\n            error:error.response.data\n        })\n    }\n\n\n    \n}\n\n\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST,addPost)\n}\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment)\n}\nfunction* watchremovePost(){\n    yield takeLatest(REMOVE_POST_REQUEST,removePost)\n}\nfunction* watchLoadPost(){\n    yield takeLatest(LOAD_POST_REQUEST,loadPost)\n}\nfunction* watchLikePost(){\n    yield takeLatest(LIKE_POST_REQUEST,like)\n}\nfunction* watchUnLikePost(){\n    yield takeLatest(UNLIKE_POST_REQUEST,unlike)\n}\n\n\n\nexport default function* postSaga(){\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n        fork(watchremovePost),\n        fork(watchLoadPost),\n        fork(watchLikePost),\n        fork(watchUnLikePost)\n    ])\n}"],"mappings":"+CACA;AAAA,sDA4BUA,OAAO;EAAA,mDA6BPC,UAAU;EAAA,mDAwBVC,UAAU;EAAA,mDA+BVC,QAAQ;EAAA,mDA6BRC,IAAI;EAAA,mDA4BJC,MAAM;EAAA,mDAyBNC,YAAY;EAAA,mDAGZC,eAAe;EAAA,mDAGfC,eAAe;EAAA,oDAGfC,aAAa;EAAA,oDAGbC,aAAa;EAAA,oDAGbC,eAAe;EAAA,oDAMAC,QAAQ;AAxNjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,IAAI,EAACC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAO,oBAAoB;AACnE,SACIC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,mBAAmB,EACnBC,iBAAiB,EACjBC,iBAAiB,EACjBC,mBAAmB,EACnBC,mBAAmB,QAEhB,kBAAkB;AACzB,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,kBAAkB;AAEpE,SAASC,UAAU,CAACC,IAAI,EAAC;EACrB,OAAO3B,KAAK,CAAC4B,IAAI,CAAC,OAAO,EAAC;IAACC,OAAO,EAACF;EAAI,CAAC,CAAC;AAC7C;AAEA,SAAUxC,OAAO,CAAC2C,MAAM;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAGD,OAAM5B,IAAI,CAACwB,UAAU,EAACI,MAAM,CAACH,IAAI,CAAC;QAAA;UAA3CI,MAAM;UAAA;UAIZ,OAAM3B,GAAG,CAAC;YACN4B,IAAI,EAACxB,gBAAgB;YACrBmB,IAAI,EAACI,MAAM,CAACJ;UAChB,CAAC,CAAC;QAAA;UAAA;UACF,OAAMvB,GAAG,CAAC;YACN4B,IAAI,EAACR,cAAc;YACnBG,IAAI,EAACI,MAAM,CAACJ,IAAI,CAACM;UACrB,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAEFC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAC,YAAIC,QAAQ,CAACT,IAAI,CAAC;UAAA;UAC5C,OAAMvB,GAAG,CAAC;YACN4B,IAAI,EAAC1B,gBAAgB;YACrB+B,KAAK,EAAC,YAAID,QAAQ,CAACT;UACvB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAKV,SAASW,aAAa,CAACX,IAAI,EAAC;EACxB,OAAO3B,KAAK,CAAC4B,IAAI,iBAAUD,IAAI,CAACY,MAAM,eAAW;IAACV,OAAO,EAACF,IAAI,CAACE;EAAO,CAAC,CAAC;AAC5E;AAEA,SAAUzC,UAAU,CAAC0C,MAAM;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAGJ,OAAM5B,IAAI,CAACoC,aAAa,EAACR,MAAM,CAACH,IAAI,CAAC;QAAA;UAA9CI,MAAM;UAAA;UAGZ,OAAMG,OAAO,CAACC,GAAG,CAAC,cAAc,EAACJ,MAAM,CAACJ,IAAI,CAAC;QAAA;UAAA;UAC7C,OAAMvB,GAAG,CAAC;YACN4B,IAAI,EAACrB,mBAAmB;YACxBgB,IAAI,EAACI,MAAM,CAACJ;UAChB,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;UAEF,OAAMvB,GAAG,CAAC;YACN4B,IAAI,EAACvB,mBAAmB;YACxBkB,IAAI,EAAC,aAAIS,QAAQ,CAACT;UACtB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAKV,SAASa,aAAa,CAACb,IAAI,EAAC;EACxB,OAAO3B,KAAK,CAAC4B,IAAI,CAAC,kBAAkB,EAAC;IAACW,MAAM,EAACZ;EAAI,CAAC,CAAC;AACvD;AAEA,SAAUtC,UAAU,CAACyC,MAAM;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAGnBI,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACL,MAAM,CAACH,IAAI,CAAC;UAAA;UAC7B,OAAMzB,IAAI,CAACsC,aAAa,EAACV,MAAM,CAACH,IAAI,CAAC;QAAA;UAA9CI,MAAM;UAAA;UAIZ,OAAMG,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACJ,MAAM,CAACJ,IAAI,CAACc,WAAW,CAAC;QAAA;UAAA;UACjE,OAAMP,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACJ,MAAM,CAACJ,IAAI,CAACM,EAAE,CAAC;QAAA;UAAA;UACpD,OAAM7B,GAAG,CAAC;YACN4B,IAAI,EAACpB,mBAAmB;YACxBe,IAAI,EAACI,MAAM,CAACJ,IAAI,CAACc;UACrB,CAAC,CAAC;QAAA;UAAA;UACF,OAAMrC,GAAG,CAAC;YACN4B,IAAI,EAACP,iBAAiB;YACtBE,IAAI,EAACI,MAAM,CAACJ,IAAI,CAACM;UACrB,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;UAEF,OAAM7B,GAAG,CAAC;YACN4B,IAAI,EAACnB,mBAAmB;YACxB6B,KAAK,EAAC,aAAIN,QAAQ,CAACT;UACvB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAKV,SAASgB,WAAW,GAAE;EAClB,OAAO3C,KAAK,CAAC4B,IAAI,CAAC,gBAAgB,CAAC;AACvC;AAEA,SAAUtC,QAAQ;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAGG,OAAMY,IAAI,CAACyC,WAAW,CAAC;QAAA;UAA9BZ,MAAM;UAAA;UAEhB,OAAM3B,GAAG,CAAC;YACN4B,IAAI,EAAChB,iBAAiB;YACtBW,IAAI,EAACI,MAAM,CAACJ;UAChB,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAIEO,OAAO,CAACQ,KAAK,cAAO;UAAA;UACpB,OAAMtC,GAAG,CAAC;YACN4B,IAAI,EAACf,iBAAiB;YACtByB,KAAK,EAAC,aAAMN,QAAQ,CAACT;UACzB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AASV,SAASiB,OAAO,GAAE;EACd,OAAO5C,KAAK,CAAC6C,KAAK,iBAAUlB,IAAI,YAAQA,IAAI,CAAC;AACjD;AAEA,SAAUpC,IAAI;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAGO,OAAMW,IAAI,CAAC0C,OAAO,EAACjB,IAAI,CAAC;QAAA;UAA/BI,MAAM;UAAA;UAEhB,OAAM3B,GAAG,CAAC;YACN4B,IAAI,EAACX,iBAAiB;YACtBM,IAAI,EAACI,MAAM,CAACJ;UAChB,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAIEO,OAAO,CAACQ,KAAK,cAAO;UAAA;UACpB,OAAMtC,GAAG,CAAC;YACN4B,IAAI,EAACZ,iBAAiB;YACtBsB,KAAK,EAAC,aAAMN,QAAQ,CAACT;UACzB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAQV,SAASmB,SAAS,GAAE;EAChB,OAAO9C,KAAK,CAAC6C,KAAK,CAAC,gBAAgB,CAAC;AACxC;AAEA,SAAUrD,MAAM;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAGK,OAAMU,IAAI,CAAC4C,SAAS,CAAC;QAAA;UAA5Bf,MAAM;UAAA;UAEhB,OAAM3B,GAAG,CAAC;YACN4B,IAAI,EAACV,mBAAmB;YACxBK,IAAI,EAACI,MAAM,CAACJ;UAChB,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAIEO,OAAO,CAACQ,KAAK,cAAO;UAAA;UACpB,OAAMtC,GAAG,CAAC;YACN4B,IAAI,EAACT,mBAAmB;YACxBmB,KAAK,EAAC,aAAMN,QAAQ,CAACT;UACzB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AASV,SAAUlC,YAAY;EAAA;IAAA;MAAA;QAAA;UAAA;UAClB,OAAMY,UAAU,CAACE,gBAAgB,EAACpB,OAAO,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAE9C,SAAUO,eAAe;EAAA;IAAA;MAAA;QAAA;UAAA;UACrB,OAAMW,UAAU,CAACK,mBAAmB,EAACtB,UAAU,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAEpD,SAAUO,eAAe;EAAA;IAAA;MAAA;QAAA;UAAA;UACrB,OAAMU,UAAU,CAACS,mBAAmB,EAACzB,UAAU,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAEpD,SAAUO,aAAa;EAAA;IAAA;MAAA;QAAA;UAAA;UACnB,OAAMS,UAAU,CAACU,iBAAiB,EAACzB,QAAQ,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAEhD,SAAUO,aAAa;EAAA;IAAA;MAAA;QAAA;UAAA;UACnB,OAAMQ,UAAU,CAACa,iBAAiB,EAAC3B,IAAI,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAE5C,SAAUO,eAAe;EAAA;IAAA;MAAA;QAAA;UAAA;UACrB,OAAMO,UAAU,CAACc,mBAAmB,EAAC3B,MAAM,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAKhD,eAAe,SAAUO,QAAQ;EAAA;IAAA;MAAA;QAAA;UAAA;UAC7B,OAAME,GAAG,CAAC,CACNE,IAAI,CAACV,YAAY,CAAC,EAClBU,IAAI,CAACT,eAAe,CAAC,EACrBS,IAAI,CAACR,eAAe,CAAC,EACrBQ,IAAI,CAACP,aAAa,CAAC,EACnBO,IAAI,CAACN,aAAa,CAAC,EACnBM,IAAI,CAACL,eAAe,CAAC,CACxB,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}