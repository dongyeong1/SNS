{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _this = this,\n  _jsxFileName = \"/Users/dong/DockerReact/Server/front/components/PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCardContent from './PostCardContent';\nimport CommentForm from './CommentForm';\n// import PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nvar CardWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));\n_c = CardWrapper;\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var _useState = useState(false),\n    commentFormOpened = _useState[0],\n    setCommentFormOpened = _useState[1];\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    removepostLoading = _useSelector.removepostLoading;\n  var _useState2 = useState(false),\n    liked = _useState2[0],\n    setLiked = _useState2[1];\n  var onLike = useCallback(function () {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onUnLike = useCallback(function () {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var postRemove = function postRemove() {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  };\n  return __jsx(CardWrapper, {\n    key: post.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 34\n      }\n    }) //a&&b a가true면 b를 반환 a가false면 a반환\n    ,\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onUnLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        onClick: postRemove,\n        loading: removepostLoading,\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }))],\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    description: __jsx(PostCardContent, {\n      PostData: post.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 24\n      }\n    }),\n    title: post.User.nickname\n    //   description={post.content}\n    //   description={<PostCardContent postData={post.content} />}\n    // }\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \" \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar:\n        // <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\n        __jsx(\"a\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 23\n          }\n        }, __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 26\n          }\n        }, item.User.nickname[0]))\n        // </Link>\n        ,\n\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })));\n};\n_s(PostCard, \"p0jhYTdpzEPB9xq9Od2zLds4uXg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  })\n};\nexport default PostCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","styled","Link","useDispatch","useSelector","PostCardContent","CommentForm","PostImages","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","FollowButton","CardWrapper","div","PostCard","post","dispatch","commentFormOpened","setCommentFormOpened","id","state","user","me","removepostLoading","liked","setLiked","onLike","type","data","onUnLike","onToggleComment","prev","postRemove","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","any"],"sources":["/Users/dong/DockerReact/Server/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCardContent from './PostCardContent';\n\nimport CommentForm from './CommentForm';\n// import PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport { REMOVE_POST_REQUEST ,LIKE_POST_REQUEST,UNLIKE_POST_REQUEST} from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst PostCard = ({ post }) => {\n\n  const dispatch=useDispatch();\n\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const id = useSelector((state) => state.user.me?.id);\n\n  const {removepostLoading}=useSelector((state)=>state.post)\n\n  const [liked, setLiked] = useState(false);\n\n  const onLike = useCallback(() => {\n    dispatch({\n      type:LIKE_POST_REQUEST,\n      data:post.id\n    })\n  }, []);\n  const onUnLike = useCallback(() => {\n    dispatch({\n      type:UNLIKE_POST_REQUEST,\n      data:post.id\n    })\n  }, []);\n\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const postRemove=()=>{\n    dispatch({\n        type:REMOVE_POST_REQUEST,\n        data:post.id\n    })\n  }\n\n  return (\n    <CardWrapper key={post.id}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}//a&&b a가true면 b를 반환 a가false면 a반환\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnLike} />\n            : <HeartOutlined key=\"heart\" onClick={onLike} />,\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\n          <Popover\n            key=\"ellipsis\"\n            content={(\n              <Button.Group>\n                {id && post.User.id === id\n                  ? (\n                    <>\n                      <Button>수정</Button>\n                      <Button onClick={postRemove} loading={removepostLoading} type=\"danger\">삭제</Button>\n                    </>\n                  )\n                  : <Button>신고</Button>}\n              </Button.Group>\n            )}\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        extra={id&&<FollowButton post={post} />}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          description={<PostCardContent PostData={post.content}></PostCardContent>}\n          title={post.User.nickname}\n        //   description={post.content}\n        //   description={<PostCardContent postData={post.content} />}\n        // }\n        />\n      </Card>\n      {commentFormOpened && (\n        <>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length} 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={(\n                    // <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\n                    // </Link>\n                  )}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </>\n      )}\n    </CardWrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n  }),\n};\n\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}